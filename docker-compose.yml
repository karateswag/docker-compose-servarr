services:
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:${SONARR_VERSION}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PUID: ${PUID}
      PGID: ${PGID}
      UMASK: ${UMASK}
    networks:
      - traefik
    volumes:
      - sonarr:/config
      - servarr_backups:/config/Backups #if you want to save backups to specific volume
      - media:/mnt/media
      - downloads:/mnt/downloads
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:${RADARR_VERSION}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PUID: ${PUID}
      PGID: ${PGID}
      UMASK: ${UMASK}
    networks:
      - traefik
    volumes:
      - radarr:/config
      - servarr_backups:/config/Backups #if you want to save backups to specific volume
      - media:/mnt/media
      - downloads:/mnt/downloads
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  deluge:
    container_name: deluge
    image: lscr.io/linuxserver/deluge:${DELUGE_VERSION}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PUID: ${PUID}
      PGID: ${PGID}
      UMASK: ${UMASK}
    networks:
      - traefik
    ports:
      - 6881:6881 #inbound torrent traffic
      - 6881:6881/udp #inbound torrent traffic
      - 58846:58846 #thin client
    volumes:
      - deluge:/config
      - downloads:/mnt/downloads
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"
      - "traefik.http.services.deluge.loadbalancer.server.port=8112"

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:${PROWLARR_VERSION}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PUID: ${PUID}
      PGID: ${PGID}
      UMASK: ${UMASK}
    networks:
      - traefik
    volumes:
      - prowlarr:/config
      - servarr_backups:/config/Backups #if you want to save backups to specific volume
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:${BAZARR_VERSION}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PUID: ${PUID}
      PGID: ${PGID}
      UMASK: ${UMASK}
    networks:
      - traefik
    volumes:
      - bazarr:/config
      - servarr_backups:/config/Backups #if you want to save backups to specific volume
      - media:/mnt/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  ombi:
    container_name: ombi
    image: lscr.io/linuxserver/ombi:${OMBI_VERSION}
    restart: unless-stopped
    environment:
      TZ: ${TIMEZONE}
      PUID: ${PUID}
      PGID: ${PGID}
    networks:
      - traefik
    volumes:
      - ombi:/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.ombi.rule=Host(`ombi.${DOMAIN}`)"
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"

networks:
  traefik:
    external: true

volumes:
  sonarr:
  radarr:
  deluge:
  bazarr:
  prowlarr:
  ombi:
  servarr_backups:
    external: true
  media:
    external: true
  downloads:
    external: true
